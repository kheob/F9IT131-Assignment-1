import java.util.*;
/**
 * The main game class for the Lucky Vending Machine. Allows a user 
 * to set up a new player, guess a prize, view winnings, and read 
 * game instructions.
 * 
 * Uses the Player and LuckyGuessGenerator classes.
 * 
 * @author Bai Chan Kheo 22262407
 * @version 1.3 23 Apr 2015
 */
public class Game
{
    private Player player;
    private LuckyGuessGenerator generator;
    
    /**
     * Constructor method for the Game class.
     */
    public Game()
    {
        player = new Player();
        generator = new LuckyGuessGenerator();
    }
    
    /**
     * Compares the number inputted with a random number generated by
     * the generator object. If it is the same, the player object will
     * be updated with details of the new prize they have won.
     */
    public void compareLuckyNumber(int guess)
    {
        String prize = "";
        int worth = 0;
        System.out.println("You have guessed: [" + guess + "]");
        generator.generateRandomNumber();
        System.out.println("The lucky number is: [" + generator.getRandomNumber() + "]");
        if (guess == generator.getRandomNumber())
        {
            switch (guess)
            {
                case 1:  prize = "Pen";
                         worth = 10;
                         break;
                case 2:  prize = "Book";
                         worth = 20;  
                         break;
                case 3:  prize = "DVD";
                         worth = 30;
                         break;
                case 4:  prize = "Mouse";
                         worth = 40;
                         break;
                case 5:  prize = "Keyboard";
                         worth = 50;
                         break;
                default: break;
            }
            System.out.println("Congratulations! You have won a [" + prize + "] worth $" 
                                + worth + ".");
            player.addPrize(prize);
            player.addWorth(worth);
        }
        else
        {
            System.out.println("Too bad! Unfortunately you didn't win anything. Please " + 
                                "try again!");
        }
        player.addSpent(guess);
    }
    
    /**
     * This method displays the game menu for the Lucky Vending
     * Machine game.
     */
    public void displayMenu()
    {
        System.out.println("----- [Welcome to the Lucky Vending Machine!] -----");
        System.out.println("Please Select from the Following Options:");
        System.out.println("[1] Set up a New Player");
        System.out.println("[2] Guess a Prize");
        System.out.println("[3] What Have I Won so Far?");
        System.out.println("[4] Display Game Help");
        System.out.println("[5] Exit Game");
    }
    
    /**
     * Display the in-game help menu. Includes a table of all the 
     * prizes.
     */
    public void displayHelp()
    {
        System.out.println("----- [Display Game Help] -----");
        System.out.println("The objective of Lucky Vending Machine is for the player to");
        System.out.println("guess a number between 1 and 5. Each number corresponds to a");
        System.out.println("prize and a cost. This is shown in the table below. If the");
        System.out.println("player guesses the correct number generated by the machine,");
        System.out.println("they win the prize.");
        displayTable();
        System.out.println("To begin, set up a new player with [Option 1] and then guess");
        System.out.println("a prize with [Option 2].");
    }
    
    /**
     * Prints out a table of all the prizes available and its 
     * corresponding worth and cost.
     */
    public void displayTable()
    {
        System.out.println("-----------------------------------------------");
        System.out.println("|Guess |Prize    |Prize Worth |Cost to Player |");
        System.out.println("-----------------------------------------------");
        System.out.println("|1     |Pen      |$10         |$1             |");
        System.out.println("|2     |Book     |$20         |$2             |");
        System.out.println("|3     |DVD      |$30         |$3             |");
        System.out.println("|4     |Mouse    |$40         |$4             |");
        System.out.println("|5     |Keyboard |$50         |$5             |");
        System.out.println("-----------------------------------------------");
    }
    
    /**
     * Stops the Lucky Vending Machine game.
     */
    public void exitGame()
    {
        player = new Player(); // Clears player statistics.
        System.out.println("----- [Exit Game] -----");
        System.out.println("The game will now exit. Have a nice day.");
    }
    
    /**
     * This method prompts the user for a guess, checks that it is 
     * valid, and then compares it to the number generated by the 
     * generator object. If it is the same, the player wins.
     */
    public void guessPrize()
    {
        int guess = 0;
        Scanner console = new Scanner(System.in);
        System.out.println("----- [Guess a Prize] -----");
        displayTable();
        System.out.println("Please guess a number between 1 and 5:");
        while (guess < 1 || guess > 5)
        {
            System.out.print("> ");
            // Gets the int value of the first character inputted by the user.
            String tempGuess = console.nextLine();
            if (tempGuess.length() == 1) // Checks if user has entered a single character.
            {
                guess = Character.getNumericValue(tempGuess.charAt(0));
                if (guess >= 1 && guess <= 5)
                {
                    compareLuckyNumber(guess);
                }
                else
                    System.out.println("Error! Your guess must be between 1 and 5.");
            }
            else
                System.out.println("Error! Your guess must be between 1 and 5.");
        }
    }
    
    /**
     * This method allows the user to create a new player using the 
     * Player class. This new player will overwrite any existing 
     * players. This method prompts the user for their name and checks
     * that its length is greater than 0 characters.
     */
    public void newPlayer()
    {
        player = new Player();
        Scanner console = new Scanner(System.in);
        System.out.println("----- [Set up a New Player] -----");
        while (player.getName().length() == 0)
        {
            System.out.println("Please enter your name:");
            System.out.print("> ");
            String newName = console.nextLine();
            if (newName.trim().length() > 0)
                player.setName(newName.trim());
            else
                System.out.print("You have not entered anything. ");
        }
    }
    
    /**
     * This method prompts the user to press the [ENTER] key to
     * continue.
     */
    public void pressEnter()
    {
        Scanner console = new Scanner(System.in);
        System.out.println("\nPress [ENTER] to continue...");
        console.nextLine();
    }
    
    /**
     * This method starts the Lucky Vending Machine game. It will
     * continue to display the game menu to the player and prompt for
     * input until the player wishes to exit the game.
     */
    public void startGame()
    {
        String input = "";
        Scanner console = new Scanner(System.in);
        while (!input.equals("5"))
        {
            displayMenu();
            System.out.print("> ");
            input = console.nextLine();
            System.out.println(""); // New line for readability.
            switch (input)
            {
                case "1":     newPlayer(); 
                              System.out.println("Player created!");
                              pressEnter(); break;
                case "2":     if (player.getName().length() > 0)
                              {
                                  guessPrize(); 
                                  pressEnter(); break;
                              }
                              else
                              {
                                  System.out.println("Player hasn't been set up."); 
                                  pressEnter(); break;
                              }
                case "3":     if (player.getName().length() > 0)
                              {
                                  player.displayPlayer(); 
                                  pressEnter(); break;
                              }
                              else
                              {
                                  System.out.println("Player hasn't been set up."); 
                                  pressEnter(); break;
                              }
                case "4":     displayHelp(); 
                              pressEnter(); break;
                case "5":     exitGame(); break;
                default:      System.out.println("Invalid Option."); 
                              pressEnter(); break;
            }
        }
    }
}